---
name: Elixir Style Checks

"on":
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  MIX_ENV: test
  SECRET_KEY_BASE: "kNdLk1/ffDLY4T1sKLmBffS0SpG7hzpq6/rRD7yM6W25l2Q9BwXlOGumdJWvZygA"
  PHX_GITHUB_TOKEN: fake

jobs:
  setup:
    name: Setup Elixir & Caching
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elixir: [1.11.0]
        otp: [22.2.8]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Elixir
        uses: actions/setup-elixir@v1
        with:
          elixir-version: ${{ matrix.elixir }} # Define the elixir version [required]
          otp-version: ${{ matrix.otp }} # Define the OTP version [required]
      - name: Restore dependencies cache
        uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-
      - name: Install dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get

  formatter:
    name: Check Formatting
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elixir: [1.11.0]
        otp: [22.2.8]
    needs: setup
    steps:
      - name: Set up Elixir
        uses: actions/setup-elixir@v1
        with:
          elixir-version: ${{ matrix.elixir }} # Define the elixir version [required]
          otp-version: ${{ matrix.otp }} # Define the OTP version [required]
      - uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-
      - run: mix format --check-formatted
  credo:
    name: Check Code Quality
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elixir: [1.11.0]
        otp: [22.2.8]
    needs: setup
    steps:
      - name: Set up Elixir
        uses: actions/setup-elixir@v1
        with:
          elixir-version: ${{ matrix.elixir }} # Define the elixir version [required]
          otp-version: ${{ matrix.otp }} # Define the OTP version [required]
      - uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-
      - run: mix credo --strict

  dialyzer:
    name: Check static analysis
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elixir: [1.11.0]
        otp: [22.2.8]
    needs: setup
    steps:
      - name: Set up Elixir
        uses: actions/setup-elixir@v1
        with:
          elixir-version: ${{ matrix.elixir }} # Define the elixir version [required]
          otp-version: ${{ matrix.otp }} # Define the OTP version [required]
      - uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-
      - name: Retrieve PLT Cache
        uses: actions/cache@v1
        id: plt-cache
        with:
          path: priv/plts
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-plts-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
      - name: Create PLTs
        if: steps.plt-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p priv/plts
          mix dialyzer --plt
      - name: Run dialyzer
        run: mix dialyzer --no-check --halt-exit-status
